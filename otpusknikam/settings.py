# -*- coding: utf-8 -*-
"""
Django settings for otpusknikam project.

Generated by 'django-admin startproject' using Django 1.8.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
from django.utils.importlib import import_module
from django.utils.safestring import mark_safe
from django.template.defaultfilters import linebreaksbr
from django.contrib import messages
from utils.files import Image

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'dj(5l*1il&1jxdm_pc&)%kf!jrar@%2x7*94co8_6yn*ldqq8#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DJANGO_DEBUG', False)

if DEBUG:
    SITE_ID = 1

DEFAULT_DOMAIN = u'otpusknikam.ru'

ALLOWED_HOSTS = ['*']

ADMINS = (
    ('Aleksey Bukin', 'bukin242@yandex.ru'),
)

MANAGERS = ADMINS

SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_COOKIE_AGE = 7776000
SESSION_ENGINE = 'django.contrib.sessions.backends.signed_cookies'

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'django.contrib.sites',
    'config',
    'otpusknikam',
    'redactor',
    'dropzone',
    'honeypot',
    'utils',
    'users',
    'kickstart',
    'jquery',
    'menu',
    'board',
    'seo',
    'haystack',
    'elasticstack',
    'parse',
    'robots',
    'articles',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'board.middleware.CheckSiteMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.contrib.sites.middleware.CurrentSiteMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'otpusknikam.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'config.context_processors.var',
                'board.context_processors.var',
                'seo.context_processors.seo_page',
            ],
        },
    },
]

WSGI_APPLICATION = 'otpusknikam.wsgi.application'

AUTH_USER_MODEL = 'users.SiteUser'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'otpusknikam',
        'USER': 'otpusknikam',
        'PASSWORD': 'Owaemah8',
    }
}

REDIS_HOST = 'localhost:6379'
REDIS_DATABASE = 0

CACHES = {
    'default': {
        'BACKEND': 'redis_cache.RedisCache',
        'LOCATION': REDIS_HOST,
        'OPTIONS': {
            'DB': REDIS_DATABASE
        }
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Asia/Yekaterinburg'

USE_I18N = True

USE_L10N = True

USE_TZ = True

DATE_FORMAT = 'd.m.Y'
DATETIME_FORMAT = 'd.m.Y H:i:s'
TIME_FORMAT = 'H:i:s'

HONEYPOT_FIELD_NAME = 'max_rest_time'

REDACTOR_OPTIONS = {
    'lang': 'ru',
    'plugins': ['table', 'video', 'fullscreen', 'fontsize', 'fontfamily', 'fontcolor']
}
REDACTOR_UPLOAD = 'uploads/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/


MEDIA_ROOT = os.path.normpath(os.path.join(BASE_DIR, 'media'))
MEDIA_URL = '/media/'

STATIC_ROOT = os.path.normpath(os.path.join(BASE_DIR, 'static'))
STATIC_URL = '/static/'

PAGINATE_BY = 40

BONUS = 200

CONFIG = {}

MESSAGE_TAGS = {
    messages.DEBUG: 'notice debug',
    messages.INFO: 'notice info',
    messages.SUCCESS: 'notice success',
    messages.WARNING: 'notice warning',
    messages.ERROR: 'notice error'
}

MAX_FILE_SIZE_UPLOAD = 8

BLANK_IMAGE = Image('base/blank.jpg')

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'elasticstack.backends.ConfigurableElasticSearchEngine',
        'URL': 'http://127.0.0.1:9200/',
        'INDEX_NAME': 'otpusknikam',
    }
}

# HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'

ELASTICSEARCH_INDEX_SETTINGS = {
    'settings': {
        'analysis': {
            'analyzer': {
                'morphology_analyzer': {
                    'type': 'custom',
                    'tokenizer': 'standard',
                    'filter': ['lowercase', 'russian_morphology', 'english_morphology', 'ru_stopwords']
                }
            },
            'filter': {
                'ru_stopwords': {
                    'type': 'stop',
                    'stopwords': u'а,без,более,бы,был,была,были,было,быть,в,вам,вас,весь,во,вот,все,всего,всех,вы,где,да,даже,для,до,его,ее,если,есть,еще,же,за,здесь,и,из,или,им,их,к,как,ко,когда,кто,ли,либо,мне,может,мы,на,надо,наш,не,него,нее,нет,ни,них,но,ну,о,об,однако,он,она,они,оно,от,очень,по,под,при,с,со,так,также,такой,там,те,тем,то,того,тоже,той,только,том,ты,у,уже,хотя,чего,чей,чем,что,чтобы,чье,чья,эта,эти,это,я,a,an,and,are,as,at,be,but,by,for,if,in,into,is,it,no,not,of,on,or,such,that,the,their,then,there,these,they,this,to,was,will,with'
                }
            }
        }
    }
}

ELASTICSEARCH_DEFAULT_ANALYZER = 'morphology_analyzer'

if 'config' in INSTALLED_APPS:

    try:
        _config_model = import_module('config.models')

        for x in _config_model.Var.objects.filter(published=True):

            if x.text_field:
                x.value = linebreaksbr(mark_safe(x.value))
            else:
                x.value = x.value.strip()

            CONFIG.update({x.name: x.value})

    except Exception:
        pass


if DEBUG:

    INTERNAL_IPS = ('127.0.0.1', )

    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

    MIDDLEWARE_CLASSES = (
        'debug_toolbar.middleware.DebugToolbarMiddleware',
    ) + MIDDLEWARE_CLASSES

    INSTALLED_APPS += ('debug_toolbar', )

    DEBUG_TOOLBAR_PANELS = [
        'debug_toolbar.panels.versions.VersionsPanel',
        'debug_toolbar.panels.timer.TimerPanel',
        'debug_toolbar.panels.settings.SettingsPanel',
        'debug_toolbar.panels.headers.HeadersPanel',
        'debug_toolbar.panels.request.RequestPanel',
        'debug_toolbar.panels.sql.SQLPanel',
        'debug_toolbar.panels.staticfiles.StaticFilesPanel',
        'debug_toolbar.panels.templates.TemplatesPanel',
        'debug_toolbar.panels.cache.CachePanel',
        'debug_toolbar.panels.signals.SignalsPanel',
        'debug_toolbar.panels.logging.LoggingPanel',
        'debug_toolbar.panels.redirects.RedirectsPanel',
        'template_timings_panel.panels.TemplateTimings.TemplateTimings',
    ]

    LOGGING_CONFIG = None
